'use client'

import { useState, useEffect, useRef, memo, useCallback } from 'react'
import { motion, AnimatePresence, useReducedMotion } from 'framer-motion'
import Link from 'next/link'
import { ChevronDown, Sparkles } from 'lucide-react'

// Memoized static components to prevent re-renders
const StaticBadge = memo(() => (
  <div className="inline-flex items-center gap-2 px-4 py-2 bg-white/80 backdrop-blur-xl rounded-full border border-apple-gray-200/50 mb-8 will-change-transform">
    <Sparkles className="w-4 h-4 text-apple-blue" />
    <span className="text-sm font-medium text-apple-gray-700">
      בניית חוויות דיגיטליות מרשימות
    </span>
  </div>
))
StaticBadge.displayName = 'StaticBadge'

// Optimized gradient with CSS animations instead of JS
const OptimizedGradientMesh = memo(() => {
  const shouldReduceMotion = useReducedMotion()
  
  if (shouldReduceMotion) {
    return (
      <div className="absolute inset-0 bg-gradient-to-br from-apple-blue/10 via-apple-purple/10 to-apple-pink/10" />
    )
  }

  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none">
      {/* Use CSS animations for better performance */}
      <div 
        className="absolute top-0 left-1/4 w-[600px] h-[600px] rounded-full opacity-30 animate-float-slow"
        style={{
          background: 'radial-gradient(circle, rgba(0,113,227,0.4) 0%, transparent 70%)',
          filter: 'blur(60px)',
          willChange: 'transform',
          transform: 'translateZ(0)', // Force GPU acceleration
          contain: 'layout style paint'
        }}
      />
      
      <div 
        className="absolute bottom-0 right-1/4 w-[500px] h-[500px] rounded-full opacity-30 animate-float-medium"
        style={{
          background: 'radial-gradient(circle, rgba(191,90,242,0.4) 0%, transparent 70%)',
          filter: 'blur(60px)',
          willChange: 'transform',
          transform: 'translateZ(0)',
          contain: 'layout style paint'
        }}
      />
      
      <div 
        className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[700px] h-[700px] rounded-full opacity-20 animate-float-slower"
        style={{
          background: 'radial-gradient(circle, rgba(255,55,95,0.3) 0%, transparent 70%)',
          filter: 'blur(80px)',
          willChange: 'transform',
          transform: 'translateZ(0)',
          contain: 'layout style paint'
        }}
      />
    </div>
  )
})
OptimizedGradientMesh.displayName = 'OptimizedGradientMesh'

// Simple typewriter without complex state management
const SimpleTypewriter = memo(({ text }: { text: string }) => {
  const [displayedText, setDisplayedText] = useState('')
  const shouldReduceMotion = useReducedMotion()

  useEffect(() => {
    if (shouldReduceMotion) {
      setDisplayedText(text)
      return
    }

    let currentIndex = 0
    const timer = setInterval(() => {
      if (currentIndex <= text.length) {
        setDisplayedText(text.slice(0, currentIndex))
        currentIndex++
      } else {
        clearInterval(timer)
      }
    }, 100)

    return () => clearInterval(timer)
  }, [text, shouldReduceMotion])

  return (
    <span className="relative">
      {displayedText}
      {!shouldReduceMotion && (
        <span className="inline-block w-1 h-12 bg-apple-blue ml-1 animate-blink" />
      )}
    </span>
  )
})
SimpleTypewriter.displayName = 'SimpleTypewriter'

// Memoized stats component
const Stats = memo(() => {
  const stats = [
    { number: '50+', label: 'פרויקטים' },
    { number: '100%', label: 'שביעות רצון' },
    { number: '5★', label: 'דירוג ממוצע' },
    { number: '24/7', label: 'תמיכה' },
  ]

  return (
    <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-20 max-w-4xl mx-auto">
      {stats.map((stat, index) => (
        <motion.div
          key={stat.label}
          className="text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ 
            delay: 0.8 + index * 0.1,
            duration: 0.5,
            ease: "easeOut"
          }}
        >
          <div className="text-3xl md:text-4xl font-bold bg-gradient-to-r from-apple-blue to-apple-purple bg-clip-text text-transparent">
            {stat.number}
          </div>
          <div className="text-sm text-apple-gray-500 mt-1">
            {stat.label}
          </div>
        </motion.div>
      ))}
    </div>
  )
})
Stats.displayName = 'Stats'

export default function HeroOptimized() {
  const [mounted, setMounted] = useState(false)
  const containerRef = useRef<HTMLDivElement>(null)
  const shouldReduceMotion = useReducedMotion()

  useEffect(() => {
    setMounted(true)
    return () => setMounted(false)
  }, [])

  // Use simpler animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 0.6,
        ease: "easeOut",
        staggerChildren: 0.1
      }
    }
  }

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5,
        ease: "easeOut"
      }
    }
  }

  return (
    <section 
      ref={containerRef}
      className="relative min-h-[100vh] lg:min-h-[110vh] flex items-center justify-center overflow-hidden bg-gradient-to-b from-white via-apple-gray-50 to-white"
    >
      {/* Only render animations after mount and if motion is not reduced */}
      {mounted && !shouldReduceMotion && <OptimizedGradientMesh />}
      
      {/* Simple grid pattern - no animation */}
      <div className="absolute inset-0 bg-[url('/grid.svg')] bg-center opacity-5 pointer-events-none" />
      
      {/* Main Content */}
      <AnimatePresence mode="wait">
        {mounted && (
          <motion.div 
            className="container relative z-10 text-center px-4 sm:px-6 lg:px-8"
            variants={containerVariants}
            initial="hidden"
            animate="visible"
          >
            {/* Badge */}
            <motion.div variants={itemVariants}>
              <StaticBadge />
            </motion.div>

            {/* Main Headline */}
            <motion.div variants={itemVariants}>
              <h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl xl:text-8xl font-bold leading-tight mb-6">
                <span className="block text-apple-gray-900">הפתרונות</span>
                <span className="block mt-2">
                  <span className="bg-gradient-to-r from-apple-blue via-apple-purple to-apple-pink bg-clip-text text-transparent">
                    הדיגיטליים
                  </span>
                </span>
                <span className="block text-apple-gray-900 mt-2">
                  {mounted ? (
                    <SimpleTypewriter text="שלך מתחילים כאן" />
                  ) : (
                    'שלך מתחילים כאן'
                  )}
                </span>
              </h1>
            </motion.div>

            {/* Subtitle */}
            <motion.div variants={itemVariants}>
              <p className="text-lg sm:text-xl md:text-2xl text-apple-gray-600 max-w-3xl mx-auto mb-12 leading-relaxed">
                מעצב ומפתח אתרים ואפליקציות ברמה הגבוהה ביותר.
                <br />
                טכנולוגיות מתקדמות, עיצוב מרהיב וחוויית משתמש מושלמת.
              </p>
            </motion.div>

            {/* CTA Buttons */}
            <motion.div 
              variants={itemVariants}
              className="flex flex-col sm:flex-row gap-4 justify-center items-center"
            >
              <Link
                href="/contact"
                className="group relative inline-flex items-center justify-center px-8 py-4 text-white bg-gradient-to-r from-apple-blue to-apple-blue-dark rounded-full font-medium text-lg overflow-hidden transition-all duration-300 shadow-lg hover:shadow-xl hover:scale-105 active:scale-95 will-change-transform"
              >
                <span className="relative z-10">בואו נתחיל</span>
              </Link>
              
              <Link
                href="/portfolio"
                className="inline-flex items-center justify-center px-8 py-4 text-apple-blue bg-white/80 backdrop-blur-xl border border-apple-gray-200 rounded-full font-medium text-lg hover:bg-white transition-all duration-300 hover:scale-105 active:scale-95 will-change-transform"
              >
                צפייה בעבודות
              </Link>
            </motion.div>

            {/* Stats */}
            <Stats />

            {/* Scroll Indicator - Simple CSS animation */}
            <div className="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce-slow">
              <ChevronDown className="w-8 h-8 text-apple-gray-400" />
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </section>
  )
}
